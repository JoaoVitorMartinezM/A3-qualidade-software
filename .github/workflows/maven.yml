# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
 # Jobs do ambiente de desenvolvimento
 build-dev:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - name: Cache SonarQube Cloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: cd LinhasAereas365 && mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=JoaoVitorMartinezM_A3-qualidade-software org.jacoco:jacoco-maven-plugin:prepare-agent -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml 

 build-hmg:
   runs-on: ubuntu-latest
   environment: 
    name: hmg
   needs: build-dev
   steps:
   - name: Realiza o checkout do repositório
     uses: actions/checkout@v3
     with:
       fetch-depth: 0
   - name: Configura o JDK 18
     uses: actions/setup-java@v3
     with:
       java-version: '18'
       distribution: 'temurin'
       cache: maven
   - name: Testa o projeto com Maven
     run: cd LinhasAereas365 && mvn -B test --file pom.xml
      # Executaospassosda análisedo códigocom o sonarcube
   - name: Cache dos pacotesdo SonarCloud
     uses: actions/cache@v3
     with:
       path: ~/.sonar/cache
       key: ${{ runner.os}}-sonar
       restore-keys: ${{ runner.os}}-sonar
   - name: Cache dos pacotesdo Maven
     uses: actions/cache@v3
     with:
       path: ~/.m2
       key: ${{ runner.os}}-m2-${{ hashFiles('**/pom.xml') }}
       restore-keys: ${{ runner.os}}-m2
   - name: Verificao projetocom Maven e Jacoco
     env:
       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}} 
       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN}}
     run: cd LinhasAereas365 && mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=JoaoVitorMartinezM_A3-qualidade-software

 build-prod:
   runs-on: ubuntu-latest
   environment: 
    name: prod
   needs: build-hmg
   steps:
   - name: Realiza o checkout do repositório
     uses: actions/checkout@v3
   - name: Configura o JDK 18
     uses: actions/setup-java@v3
     with:
       java-version: '18'
       distribution: 'temurin'
       cache: maven
  # Executa o empacotamento do projeto com o Maven. 
  # O parâmetro-DskipTests pula os testes pois já foram executados no ambiente anterior.
   - name: Empacota o projeto com Maven      
     run: cd LinhasAereas365 && mvn -B package --file pom.xml -DskipTests
 # Cria o artefato de download    
   - name: Crie uma pasta temporária de downloads de artefatos
     run: cd LinhasAereas365 && mkdir staging
   - name: Copia os artefatos a serem publicados na pasta temporária
     run: cp LinhasAereas365/target/*jar-with-dependencies.jar LinhasAereas365/staging
   - name: Usa Upload Artifact do GitHub Action
     uses: actions/upload-artifact@v3
     with:
       name: Package
       path: staging

  
